# - name: Deploy rabbitmq
#   hosts: rabbitmq
#   become: yes
#   roles:
#     - role: Stouts.rabbitmq
#   tags:
#     - cumulus


#################33

- name: Deploy girder
  hosts: girder
  pre_tasks:
    - name: Create users
      user:
        name: "{{ item }}"
      become: yes
      become_user: root
      with_items:
        - "{{ girder_user }}"
        - "{{ cumulus_celery_user }}"

  roles:
    - role: girder
      become: yes
      become_user: "{{ girder_user }}"

    - role: cumulus
      girder_plugins:
        - cumulus
      become: Yes
      become_user: "{{ girder_user }}"
      tags:
        - cumulus
#
#     - role: minerva
#       state: started
#       minerva_version: "cumulus-frontend-integration"
#       tags:
#         - minerva
#         - config
#
#     - role: upstart
#       service_name: "girder"
#       service_chdir: "{{ girder_path }}"
#       service_user: "{{ girder_user }}"
#       service_exec: "python -m girder"
#
#   tasks:
#     - name: cumulus_frontend | install | plugin
#       shell: >
#         . {{ girder_venv_root }}/bin/activate &&
#         girder-install plugin -s -f {{ minerva_install_root }}/plugins/cumulus_frontend
#       become: yes
#       become_user: girder
#       tags:
#         - config
#
- name: Configure girder
  hosts: girder
  vars:
    girder_port: "{{ girder_port|default(8080) }}"
  tags:
    - config
    - cumulus
  tasks:
    - name: Install girder client
      pip:
        name: girder-client
        version: 1.1.1
        virtualenv: "{{ girder_venv }}"
      when: girder_venv is defined

    - name: Install girder client
      pip:
        name: girder-client
        version: 1.1.1
        virtualenv: "{{ girder_venv }}"
      when: girder_venv is not defined
      become: yes
      become_user: root

    - name: Create 'admin' User
      girder:
        host: "{{ ansible_default_ipv4['address'] }}"
        port: "{{ girder_port }}"
        user:
          firstName: "Admin"
          lastName: "User"
          login: "admin"
          password: "letmein"
          email: "admin.user@kitware.com"
          admin: yes
        state: present

    - name: Create 'cumulus' User
      girder:
        host: "{{ ansible_default_ipv4['address'] }}"
        port: "{{ girder_port }}"
        username: "admin"
        password: "letmein"
        user:
          firstName: "Cumulus"
          lastName: "Cumulus"
          login: "cumulus"
          password: "letmein"
          email: "cumulus@kitware.com"
        state: present

    - name: Create cumulus group with cumulus user
      girder:
        host: "{{ ansible_default_ipv4['address'] }}"
        port: "{{ girder_port }}"
        username: "admin"
        password: "letmein"
        group:
          name: "cumulus"
          description: "cumulus group"
          users:
            - login: cumulus
              type: admin
        state: present

    - name: Create filesystem assetstore
      girder:
        host: "{{ ansible_default_ipv4['address'] }}"
        port: "{{ girder_port }}"
        username: "admin"
        password: "letmein"
        assetstore:
          name: "Filesystem Assetstore"
          type: "filesystem"
          root: "{{ girder_base_path }}/data/{{ girder_version }}"
          current: true
        state: present

    - name: Ensure minerva, cumulus, romanesco and cumulus_frontend plugins are enabled
      girder:
        host: "{{ ansible_default_ipv4['address'] }}"
        port: "{{ girder_port }}"
        username: "admin"
        password: "letmein"
        plugins:

          - cumulus
#          - minerva
#          - cumulus_frontend
        state: present

    - name: Restart the server
      girder:
        host: "{{ ansible_default_ipv4['address'] }}"
        port: "{{ girder_port }}"
        username: "admin"
        password: "letmein"
        put:
          path: "system/restart"
