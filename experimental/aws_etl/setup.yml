- name: Launch template instances
  hosts: localhost
  vars:
    - ec2_region: us-west-2
    - ec2_group: default
    - ec2_image: ami-e0f7e081
    - ec2_key_name: kotfic-NEX
  tasks:
    - ec2_vpc_subnet_facts:
        region: us-west-2
      register: vpc_facts

    - set_fact:
        snapshot_tag: "{{lookup('pipe', 'date +%Y%m%dT%H%M') }}"
        aws_access_key: "{{ lookup('pipe', 'echo $AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('pipe', 'echo $AWS_SECRET_ACCESS_KEY') }}"
        subnet_id: "{{ vpc_facts['subnets'][0]['id'] }}"
        subnet_block: "{{ vpc_facts['subnets'][0]['cidr_block'] }}"

    - ec2:
        image: "{{ ec2_image }}"
        group: "{{ ec2_group }}"
        region: "{{ ec2_region }}"
        key_name: "{{ ec2_key_name }}"
        instance_type: m4.xlarge
        count_tag:
          Name: master_template
        instance_tags:
          Name: master_template
          group: ec2_etl
        wait: yes
        vpc_subnet_id: "{{ subnet_id }}"
        exact_count: 1
      register: ec2

    - add_host:
        hostname: "{{ item.public_ip }}"
        groupname: tag_Name_master_template,tag_group_aws_etl
        ansible_ssh_private_key_file: "keys/{{ ec2_key_name }}.pem"
        ansible_user: ubuntu
      with_items: "{{ ec2.instances + ec2.tagged_instances }}"

    - ec2:
        image: "{{ ec2_image }}"
        group: "{{ ec2_group }}"
        region: "{{ ec2_region }}"
        key_name: "{{ ec2_key_name }}"
        instance_type: m4.xlarge
        count_tag:
          Name: slave_template
        instance_tags:
          Name: slave_template
          group: ec2_etl
        wait: yes
        vpc_subnet_id: "{{ subnet_id }}"
        exact_count: 1
      register: ec2

    - add_host:
        hostname: "{{ item.public_ip }}"
        groupname: tag_Name_slave_template,tag_group_aws_etl
        ansible_ssh_private_key_file: "keys/{{ ec2_key_name }}.pem"
        ansible_user: ubuntu
      with_items: "{{ ec2.instances + ec2.tagged_instances }}"


- name: Personal Setup
  hosts: tag_group_aws_etl
  become: yes
  tags:
    - personal
  tasks:
    - name: Development setup
      apt:
        update_cache: yes
        name: "{{ item }}"
      with_items:
        - git
        - emacs24-nox
        - ipython
        - mosh

    - name: Install pip
      shell: "curl https://bootstrap.pypa.io/get-pip.py | sudo python -"

    - name: set up packages
      pip:
        name: "{{ item }}"
      with_items:
        - jedi
        - epc

    - name: Setup emacs
      git:
        repo: https://github.com/kotfic/emacs-config.git
        dest: ~/.emacs.d
      become: no



- name: Gather facts
  hosts: tag_group_aws_etl
  become: yes
  tags:
    - always
  tasks:
    - name: Gather ec2 facts
      action: ec2_facts

- name: Configure master
  hosts: tag_Name_master_template
  become: yes
  vars:

  tags:
    - nfs
    - nfs_master
  tasks:

    - shell: >-
        curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/$(curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/ 2>/dev/null | head -n 1)vpc-ipv4-cidr-block
      register: vpc_cdir_block_output

    - set_fact:
        vpc_cdir_block: vpc_cdir_block_output.stdout

    - fail:
        msg: "{{ vpc_cdir_block }}"

    - name: Install system packages
      apt:
        name: "{{ item }}"
      with_items:
        - nfs-kernel-server
        - rabbitmq-server
        - python-dev
        - python-numpy

    - name: create /public
      file:
        path: /public
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"


- name: Configure workers
  hosts: tag_Name_worker_template
  become: yes
  vars:
    master_url: "{{ hostvars[groups['tag_Name_master_template'][0]]['ec2_dns_name'] }}"
  tags:
    - nfs
    - nfs_worker
  tasks:
    - name: Install system packages
      apt:
        name: "{{ item }}"
      with_items:
        - nfs-common
        - python-dev
        - python-numpy

    - name: create /public
      file:
        path: /public
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_group }}"

#
#
# - name: Gather facts
#   hosts: tag_group_celery_perftest
#   become: yes
#   tags:
#     - celery
#   tasks:
#     - name: install requirements
#       pip:
#         chdir: /public/nex/experimental/celery_performance/
#         requirements: requirements.txt
